workflows:
  android-workflow:
    name: Android Build with Expo
    max_build_duration: 120
    environment:
      vars:
        EXPO_TOKEN: $EXPO_TOKEN  # Set this in Codemagic UI environment variables
        EAS_PROJECT_ID: $EAS_PROJECT_ID  # Your Expo project ID
        # Using debug keystore for simplicity
        KEYSTORE_PASSWORD: android
        KEY_ALIAS: androiddebugkey
        KEY_PASSWORD: android
      node: 18.17.1  # Specify Node.js version to avoid compatibility issues
    scripts:
      - name: Set up environment
        script: |
          # Check if pnpm is already available, if not install it
          if ! command -v pnpm &> /dev/null; then
            npm install -g pnpm --force
          fi
          
          # Install EAS CLI (avoid duplicate installation)
          if ! command -v eas &> /dev/null; then
            npm install -g @expo/eas-cli --force
          fi
          
          # Install project dependencies
          pnpm install
          
          # Configure EAS with error handling
          if [ -n "$EXPO_TOKEN" ]; then
            eas login --token $EXPO_TOKEN
          else
            echo "Warning: EXPO_TOKEN not set, skipping EAS login"
          fi
          
      - name: Set up debug keystore
        script: |
          # Create keystore properties for debug
          echo "storeFile=debug.keystore" > android/keystore.properties
          echo "storePassword=android" >> android/keystore.properties
          echo "keyAlias=androiddebugkey" >> android/keystore.properties
          echo "keyPassword=android" >> android/keystore.properties
          
          # The debug.keystore will be automatically generated by Gradle
          
      - name: Build Android Release
        script: |
          # Prebuild Android files
          npx expo prebuild -p android
          
          # Update build.gradle for debug signing
          cat >> android/app/build.gradle << 'EOL'

          // Debug signing configuration
          android {
              signingConfigs {
                  debug {
                      storeFile file('debug.keystore')
                      storePassword 'android'
                      keyAlias 'androiddebugkey'
                      keyPassword 'android'
                  }
                  release {
                      storeFile file('debug.keystore')
                      storePassword 'android'
                      keyAlias 'androiddebugkey'
                      keyPassword 'android'
                  }
              }
              buildTypes {
                  debug {
                      signingConfig signingConfigs.debug
                  }
                  release {
                      signingConfig signingConfigs.release
                      minifyEnabled true
                      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
                  }
              }
          }
          EOL
          
          # Build the release
          cd android
          ./gradlew clean
          ./gradlew assembleRelease
          
      - name: Upload Artifact
        script: |
          mkdir -p build
          cp android/app/build/outputs/bundle/release/app-release.aab build/
          cp android/app/build/outputs/apk/release/app-release.apk build/
    artifacts:
      - build/*.apk
      - build/*.aab
    publishing:
      email:
        recipients:
          - your.email@example.com  # Update with your email
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: 'main'
          include: true