workflows:
  android-workflow:
    name: Android Build with Expo
    max_build_duration: 120
    environment:
      vars:
        # Using debug keystore for simplicity
        KEYSTORE_PASSWORD: android
        KEY_ALIAS: androiddebugkey
        KEY_PASSWORD: android
      node: 18.17.1  # Specify Node.js version to avoid compatibility issues
    scripts:
      - name: Set up environment
        script: |
          # Check if pnpm is already available, if not install it
          if ! command -v pnpm &> /dev/null; then
            npm install -g pnpm --force
          fi
          
          # Install project dependencies
          pnpm install
          
          # Skip EAS setup since no EXPO_TOKEN is provided
          echo "Building locally without Expo cloud services"
          
      - name: Build Android Release
        script: |
          # First, run expo prebuild to create the android folder
          npx expo prebuild -p android
          
          # Now create keystore properties after android folder exists
          echo "storeFile=debug.keystore" > android/keystore.properties
          echo "storePassword=android" >> android/keystore.properties
          echo "keyAlias=androiddebugkey" >> android/keystore.properties
          echo "keyPassword=android" >> android/keystore.properties
          
          # Fix expo-camera dependency issue
          # Add jcenter repository to android/build.gradle if not present
          if ! grep -q "jcenter()" android/build.gradle; then
            sed -i '/google()/a\        jcenter()' android/build.gradle
          fi
          
          # Add Maven Central repository
          if ! grep -q "mavenCentral()" android/build.gradle; then
            sed -i '/google()/a\        mavenCentral()' android/build.gradle
          fi
          
          # Update build.gradle for debug signing
          cat >> android/app/build.gradle << 'EOL'

          // Debug signing configuration
          android {
              signingConfigs {
                  debug {
                      storeFile file('debug.keystore')
                      storePassword 'android'
                      keyAlias 'androiddebugkey'
                      keyPassword 'android'
                  }
                  release {
                      storeFile file('debug.keystore')
                      storePassword 'android'
                      keyAlias 'androiddebugkey'
                      keyPassword 'android'
                  }
              }
              buildTypes {
                  debug {
                      signingConfig signingConfigs.debug
                  }
                  release {
                      signingConfig signingConfigs.release
                      minifyEnabled true
                      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
                  }
              }
          }
          EOL
          
          # Build the release with verbose output for debugging
          cd android
          ./gradlew clean
          ./gradlew assembleRelease --stacktrace
          
      - name: Upload Artifact
        script: |
          mkdir -p build
          cp android/app/build/outputs/bundle/release/app-release.aab build/
          cp android/app/build/outputs/apk/release/app-release.apk build/
    artifacts:
      - build/*.apk
      - build/*.aab
    publishing:
      email:
        recipients:
          - your.email@example.com  # Update with your email
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: 'main'
          include: true