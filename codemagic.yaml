workflows:
  android-workflow:
    name: Android Build with Expo
    max_build_duration: 120
    environment:
      vars:
        KEYSTORE_PASSWORD: android
        KEY_ALIAS: androiddebugkey
        KEY_PASSWORD: android
      node: 18.17.1
    scripts:
      - name: Set up environment
        script: |
          # Install Node.js and pnpm
          npm install -g pnpm
          
          # Install project dependencies
          pnpm install
          
          # Install Expo CLI
          npm install -g expo-cli
          
          # Clear any cached files
          rm -rf $HOME/.expo
          rm -rf node_modules
          rm -rf $HOME/.gradle/caches
          
          # Clean install dependencies
          pnpm install --force

      - name: Build Android Release
        script: |
          # Clear previous build
          rm -rf android
          
          # Prebuild with expo
          npx expo prebuild --clean -p android
          
          # Navigate to android directory
          cd android
          
          # Add required repositories and configurations
          sed -i -e '/mavenCentral()/i\            google()\n            maven { url "https://maven.google.com" }\n            maven { url "https://www.jitpack.io" }' build.gradle
          
          # Update app/build.gradle with required configurations
          sed -i -e '/defaultConfig {/a\        multiDexEnabled true' app/build.gradle
          
          # Add camera view dependency
          if ! grep -q "com.google.android:cameraview" app/build.gradle; then
            sed -i -e '/dependencies {/a\    implementation "com.google.android:cameraview:1.0.0"' app/build.gradle
          fi
          
          # Clean Gradle
          ./gradlew clean
          
          # Create keystore properties
          echo "storeFile=debug.keystore" > app/keystore.properties
          echo "storePassword=android" >> app/keystore.properties
          echo "keyAlias=androiddebugkey" >> app/keystore.properties
          echo "keyPassword=android" >> app/keystore.properties
          
          # Build the release with more memory
          export ORG_GRADLE_PROJECT_androidxJvmArgs="-Xmx4096m -XX:MaxPermSize=1024m -XX:+HeapDumpOnOutOfMemoryError"
          export GRADLE_OPTS="-Dorg.gradle.daemon=true -Dorg.gradle.parallel=true -Dorg.gradle.jvmargs='-Xmx4096m -XX:MaxPermSize=1024m -XX:+HeapDumpOnOutOfMemoryError'"
          
          # Build APK and AAB
          ./gradlew assembleRelease bundleRelease --stacktrace --info --max-workers 2
          
          # List what was actually built
          echo "=== Build outputs ==="
          find app/build/outputs -name "*.apk" -o -name "*.aab" | head -10
          
          # Go back to root and create artifacts directory
          cd ..
          mkdir -p artifacts
          
          # Copy all APK and AAB files to artifacts directory
          find android/app/build/outputs -name "*.apk" -exec cp {} artifacts/ \;
          find android/app/build/outputs -name "*.aab" -exec cp {} artifacts/ \;
          
          # List final artifacts
          echo "=== Final artifacts ==="
          ls -la artifacts/

    artifacts:
      - artifacts/*.apk
      - artifacts/*.aab
      
    publishing:
      # Email notification with download links
      email:
        recipients:
          - deamirclothingstores@gmail.com
        notify:
          success: true
          failure: true
          
      # Optional: Slack notification with download links
      # slack:
      #   channel: '#builds'
      #   notify_on_build_start: false
      #   notify:
      #     success: true
      #     failure: true
          
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: 'main'
          include: true